server:
  8088

spring:
  #整合shardingsphere-jdbc实现读写分离
  shardingsphere:
    datasource:
      names: master,slave
      master:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: 123456
        type: com.zaxxer.hikari.HikariDataSource
        jdbc-url: jdbc:mysql://127.0.0.1:3306/tomato_shop?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true
        username: root
      slave:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: 123456
        type: com.zaxxer.hikari.HikariDataSource
        jdbc-url: jdbc:mysql://127.0.0.1:3307/tomato_shop?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true
        username: root
    masterslave:
      # 读写分离配置
      load-balance-algorithm-type: round_robin
      # 最终的数据源名称
      name: dataSource
      # 主库数据源名称
      master-data-source-name: master
      # 从库数据源名称列表，多个逗号分隔
      slave-data-source-names: slave
    props:
      sql:
        show: true

  #整合redis
  redis:
    host: localhost # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: # Redis服务器连接密码（默认为空）
    lettuce:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
        timeout: 3000ms # 连接超时时间（毫秒）
    key:
      database: 'tomato_shop'
      authCode: 'ums:authCode'
      orderId: 'oms:orderId'
      member: 'ums:member'

#整合mybatis
mybatis:
  mapperLocations: classpath:mapper/**/*.xml
#mybatis分页插件pagehelper
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

# ===== 自定义swagger配置 ===== #
swagger:
  enable: true
  application-name: Tomato Shop
  application-version: 1.0
  application-description: springfox swagger 3.0整合
  try-host: http://localhost:${server.port}

logging:
  level:
    root: info