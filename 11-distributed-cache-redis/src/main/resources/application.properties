logging.level.root=info

#redis配置
spring.cache.type=redis
spring.cache.redis.host=localhost
spring.cache.redis.lettuce.pool.max-active=16
spring.cache.redis.lettuce.pool.max-wait=10ms

spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.autoCommit=false
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/tomato_shop_0?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds0.password=123456
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds1.autoCommit=false
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/tomato_shop_1?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds1.password=123456
spring.shardingsphere.datasource.ds1.username=root

spring.shardingsphere.datasource.names=ds0,ds1
spring.shardingsphere.rules.props.sql.show=true
#订单表 规则配置
spring.shardingsphere.rules.sharding.tables.oms_order.actual-data-nodes=ds$->{0..1}.oms_order_$->{0..7}
spring.shardingsphere.rules.sharding.tables.oms_order.database-strategy.standard.sharding-algorithm-name=order-database-inline
spring.shardingsphere.rules.sharding.tables.oms_order.database-strategy.standard.sharding-column=member_id
spring.shardingsphere.rules.sharding.tables.oms_order.table-strategy.standard.sharding-algorithm-name=order-table-inline
spring.shardingsphere.rules.sharding.tables.oms_order.table-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.oms_order.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.oms_order.key-generate-strategy.key-generator-name=snowflake
#订单详情表 规则配置
spring.shardingsphere.rules.sharding.tables.oms_order_detail.actual-data-nodes=ds$->{0..1}.oms_order_detail_$->{0..7}
spring.shardingsphere.rules.sharding.tables.oms_order_detail.database-strategy.standard.sharding-algorithm-name=order-detail-database-inline
spring.shardingsphere.rules.sharding.tables.oms_order_detail.database-strategy.standard.sharding-column=member_id
spring.shardingsphere.rules.sharding.tables.oms_order_detail.table-strategy.standard.sharding-algorithm-name=order-detail-table-inline
spring.shardingsphere.rules.sharding.tables.oms_order_detail.table-strategy.standard.sharding-column=order_id
#商品表 规则配置
spring.shardingsphere.rules.sharding.tables.pms_product.actual-data-nodes=ds$->{0..1}.pms_product
spring.shardingsphere.rules.sharding.tables.pms_product.database-strategy.standard.sharding-algorithm-name=product-database-inline
spring.shardingsphere.rules.sharding.tables.pms_product.database-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.pms_product.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.pms_product.key-generate-strategy.key-generator-name=snowflake
#库存表 规则配置
spring.shardingsphere.rules.sharding.tables.pms_sku_stock.actual-data-nodes=ds$->{0..1}.pms_sku_stock
spring.shardingsphere.rules.sharding.tables.pms_sku_stock.database-strategy.standard.sharding-algorithm-name=stock-database-inline
spring.shardingsphere.rules.sharding.tables.pms_sku_stock.database-strategy.standard.sharding-column=product_id
#用户表 规则配置
spring.shardingsphere.rules.sharding.tables.ums_member.actual-data-nodes=ds$->{0..1}.ums_member
spring.shardingsphere.rules.sharding.tables.ums_member.database-strategy.standard.sharding-algorithm-name=user-database-inline
spring.shardingsphere.rules.sharding.tables.ums_member.database-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.ums_member.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.ums_member.key-generate-strategy.key-generator-name=snowflake
#购物车表 规则配置
spring.shardingsphere.rules.sharding.tables.oms_cart_detail.actual-data-nodes=ds$->{0..1}.oms_cart_detail
spring.shardingsphere.rules.sharding.tables.oms_cart_detail.database-strategy.standard.sharding-algorithm-name=cart-database-inline
spring.shardingsphere.rules.sharding.tables.oms_cart_detail.database-strategy.standard.sharding-column=member_id


#订单表 分库算法
spring.shardingsphere.rules.sharding.sharding-algorithms.order-database-inline.props.algorithm-expression=ds$->{member_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.order-database-inline.type=INLINE
#订单表 分表算法
spring.shardingsphere.rules.sharding.sharding-algorithms.order-table-inline.props.algorithm-expression=oms_order_$->{id % 8}
spring.shardingsphere.rules.sharding.sharding-algorithms.order-table-inline.type=INLINE
#订单详情表 分库算法
spring.shardingsphere.rules.sharding.sharding-algorithms.order-detail-database-inline.props.algorithm-expression=ds$->{member_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.order-detail-database-inline.type=INLINE
#订单详情表 分表算法
spring.shardingsphere.rules.sharding.sharding-algorithms.order-detail-table-inline.props.algorithm-expression=oms_order_detail_$->{order_id % 8}
spring.shardingsphere.rules.sharding.sharding-algorithms.order-detail-table-inline.type=INLINE
#商品表 分库算法
spring.shardingsphere.rules.sharding.sharding-algorithms.product-database-inline.props.algorithm-expression=ds$->{id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.product-database-inline.type=INLINE
#用户表 分库算法
spring.shardingsphere.rules.sharding.sharding-algorithms.user-database-inline.props.algorithm-expression=ds$->{id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.user-database-inline.type=INLINE
#库存表 分库算法
spring.shardingsphere.rules.sharding.sharding-algorithms.stock-database-inline.props.algorithm-expression=ds$->{product_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.stock-database-inline.type=INLINE
#购物车 分库算法
spring.shardingsphere.rules.sharding.sharding-algorithms.cart-database-inline.props.algorithm-expression=ds$->{member_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.cart-database-inline.type=INLINE

#配置雪花算法
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=33
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=snowflake

#默认 分库策略 # 默认数据库分片策略
spring.shardingsphere.sharding.default-database-strategy.standard= database-inline
# 默认表分片策略
#spring.shardingsphere.sharding.default-table-strategy.standard=
# 默认分布式序列策略
spring.shardingsphere.sharding.default-key-generate-strategy.standard= snowflake

#默认 分库算法
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds$->{id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
#默认 分表算法(不配置)


mybatis-plus.mapper-locations=classpath:mapper/**/*.xml
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

swagger.application-description=Distributed cache using redis
swagger.application-name=Distributed cache Service
swagger.application-version=1.0
swagger.enable=true
swagger.try-host=http://localhost:${server.port}
