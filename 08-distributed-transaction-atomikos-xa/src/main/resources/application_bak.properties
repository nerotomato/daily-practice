spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource

spring.shardingsphere.datasource.names=ds0,ds1
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/money_0
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456
spring.shardingsphere.datasource.ds0.autoCommit=false

spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/money_1
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456
spring.shardingsphere.datasource.ds1.autoCommit=false
# 配置 t_account 表规则
spring.shardingsphere.rules.sharding.tables.t_account.actual-data-nodes=ds$->{0..1}.t_account$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_account.key-generator.column=id
spring.shardingsphere.rules.sharding.tables.t_account.key-generator.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.tables.t_account.key-generator.props.worker.id=33
spring.shardingsphere.rules.props.sql.show=true
# 配置分库策略
spring.shardingsphere.rules.sharding.tables.t_account.database-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.t_account.database-strategy.standard.sharding-algorithm-name=database-inline
# 配置分表策略
spring.shardingsphere.rules.sharding.tables.t_account.table-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.t_account.table-strategy.standard.sharding-algorithm-name=table-inline

# 分布式序列策略配置
# 分布式序列列名称
spring.shardingsphere.rules.sharding.tables.t_account.key-generate-strategy.column=id
# 分布式序列算法名称
spring.shardingsphere.rules.sharding.tables.t_account.key-generate-strategy.key-generator-name=snowflake
# 配置 分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds$->{id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=t_account_$->{id % 2}

# 分布式序列算法配置
# 分布式序列算法类型
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=snowflake
# 分布式序列算法属性配置
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=33

#整合mybatis
mybatis.mapperLocations=classpath:mapper/**/*.xml

# ===== 自定义swagger配置 ===== #
swagger.enable=true
swagger.application-name=Tomato Shop
swagger.application-version=1.0
swagger.application-description=springfox swagger 3.0整合
swagger.try-host=http://localhost:${server.port}

logging.level.root=info